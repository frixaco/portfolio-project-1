{"version":3,"sources":["components/MyPosts/MyPosts.jsx","components/Navbars/ProfileNavBar.jsx","pages/Profile/Profile.jsx","components/validators-utils.js","components/Login/Login.jsx","components/Register/Register.jsx","pages/AuthPage/AuthPage.jsx","pages/PostPage/PostPage.jsx","App.js","redux/user/userActions.js","initSocket.js","redux/posts/postsActions.js"],"names":["MyPosts","myposts","className","length","map","post","idx","key","author","title","date","to","_id","content","src","imglink","alt","connect","logoutUser","username","handleUserDelete","e","a","Axios","socket","emit","console","log","disabled","onClick","user","email","posts","items","areFetching","filter","updateUserAsync","useState","newUsername","setNewUsername","newEmail","setNewEmail","newPassword","setNewPassword","value","onChange","target","type","loading","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","guest","loginUserAsync","password","form","setForm","fillForm","name","handleLogin","undefined","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","transition","Slide","placeholder","onKeyDown","newestOnTop","rtl","pauseOnFocusLoss","transport","test","registerUser","success","error","AuthPage","editPostAsync","deletePostAsync","history","useHistory","id","useParams","editMode","setEditMode","find","item","editTitle","editContent","editImgLink","newPost","setNewPost","handleEdit","goBack","newTitle","cols","rows","newContent","min","max","Math","ceil","floor","random","width","style","margin","editedPost","Date","toLocaleString","Home","React","lazy","isLoggedIn","validUntil","useEffect","currTime","getTime","exact","path","fallback","Spinner","component","dispatch","UserActionTypes","LOGIN_START","then","response","LOGIN_SUCCESS","payload","loginUserSuccess","data","catch","err","errMessage","message","LOGIN_FAILURE","UPDATE_PROFILE_START","UPDATE_PROFILE_SUCCESS","updateUserSuccess","UPDATE_PROFILE_FAILURE","LOGOUT","io","createPostAsync","PostActionTypes","NEW_POST_START","NEW_POST_SUCCESS","createPostSuccess","NEW_POST_FAILURE","fetchPostsAsync","FETCH_POSTS_START","get","reverse","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","EDIT_POST_START","EDIT_POST_SUCCESS","editPostSuccess","EDIT_POST_FAILURE","postid","DELETE_POST_START","delete","DELETE_POST_SUCCESS","deletePostSuccess","DELETE_POST_FAILURE"],"mappings":"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","file":"static/js/5.ce359692.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction MyPosts({ myposts }) {\n  return (\n    <>\n      <h3 className=\"text-center bg-light py-4\">MY POSTS</h3>\n      <div className=\"myposts-container\">\n        {myposts.length !== 0 &&\n          myposts.map((post, idx) => (\n            <div key={idx} className=\"post\">\n              <div className=\"left\">\n                <div className=\"top\">\n                  <div className=\"userdata\">\n                    <p>{post.author}</p>\n                    <h4>{post.title}</h4>\n                    <span>{post.date}</span>\n                  </div>\n                  <div className=\"icon\">\n                    <Link to={`/${post._id}`}>\n                      <i className=\"fas fa-eye\"></i>\n                    </Link>\n                  </div>\n                </div>\n                <div className=\"bottom\">\n                  <p>{post.content}</p>\n                </div>\n              </div>\n              <img src={post.imglink} alt=\"\" />\n            </div>\n          ))}\n      </div>\n    </>\n  );\n}\n\nexport default MyPosts;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\n\nimport { logoutUser } from \"../../redux/user/userActions\";\nimport socket from \"../../initSocket\";\n\nfunction ProfileNavBar({ username, logoutUser }) {\n  const handleUserDelete = async (e) => {\n    try {\n      await Axios.post(\"/profile\", { username });\n      socket.emit(\"user_disconnected\", username);\n      logoutUser();\n    } catch (err) {\n      console.log(\"Error when deleting account\");\n    }\n  };\n\n  return (\n    <nav className=\"profile-nav\">\n      <Link to=\"/\">\n        <div className=\"icon\">\n          <i className=\"fas fa-arrow-left\"></i>\n        </div>\n      </Link>\n      <button\n        disabled={username === \"GuestUser\" ? true : false}\n        onClick={handleUserDelete}\n        className=\"icon\"\n      >\n        <i className=\"fas fa-user-slash\"></i>\n      </button>\n    </nav>\n  );\n}\n\nexport default connect(null, { logoutUser })(ProfileNavBar);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { updateUserAsync } from \"../../redux/user/userActions\";\nimport MyPosts from \"../../components/MyPosts/MyPosts\";\nimport ProfileNavBar from \"../../components/Navbars/ProfileNavBar\";\n\nfunction Profile({ username, email, areFetching, myposts, updateUserAsync }) {\n  const [newUsername, setNewUsername] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n\n  return (\n    <main className=\"profile-page-container\">\n      <ProfileNavBar username={username} />\n      <div className=\"profile-username\">\n        <h3>{username}</h3>\n      </div>\n      {username === \"GuestUser\" ? (\n        <div className=\"alert\">GuestUsers cannot edit profile details</div>\n      ) : null}\n      <div className=\"profile-details-card\">\n        <div className=\"details-edit\">\n          <p>{username}</p>\n          <input\n            value={newUsername}\n            onChange={(e) => setNewUsername(e.target.value)}\n            disabled={username === \"GuestUser\" ? true : false}\n            type=\"text\"\n          />\n          <button\n            onClick={() =>\n              updateUserAsync({\n                key: \"username\",\n                value: newUsername,\n              })\n            }\n          >\n            Save\n          </button>\n        </div>\n        <div className=\"detail\">\n          <p>Username</p>\n        </div>\n      </div>\n      <div className=\"profile-details-card\">\n        <div className=\"details-edit\">\n          <p>{email}</p>\n          <input\n            value={newEmail}\n            onChange={(e) => setNewEmail(e.target.value)}\n            disabled={username === \"GuestUser\" ? true : false}\n            type=\"email\"\n          />\n          <button\n            onClick={() =>\n              updateUserAsync({\n                key: \"email\",\n                value: newEmail,\n              })\n            }\n          >\n            Save\n          </button>\n        </div>\n        <div className=\"detail\">\n          <p>Email</p>\n        </div>\n      </div>\n      <div className=\"profile-details-card\">\n        <div className=\"details-edit\">\n          <input\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n            disabled={username === \"GuestUser\" ? true : false}\n            type=\"password\"\n          />\n          <button\n            onClick={() =>\n              updateUserAsync({\n                key: \"password\",\n                value: newPassword,\n              })\n            }\n          >\n            Save\n          </button>\n        </div>\n        <div className=\"detail\">\n          <p>Password</p>\n        </div>\n      </div>\n      <MyPosts loading={areFetching} myposts={myposts} />\n    </main>\n  );\n}\n\nconst mapStateToProps = ({\n  user: { username, email },\n  posts: { items, areFetching },\n}) => ({\n  myposts: items.filter((post) => post.author === username),\n  username,\n  email,\n  areFetching,\n});\n\nexport default connect(mapStateToProps, { updateUserAsync })(Profile);\n","export const validEmailRegex = RegExp(\n  /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n);\nexport const validateForm = (errors) => {\n  let valid = true;\n  Object.values(errors).forEach((val) => val.length > 0 && (valid = false));\n  return valid;\n};\n","import React, { useState } from \"react\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { connect } from \"react-redux\";\nimport { loginUserAsync } from \"../../redux/user/userActions\";\nimport { validateForm } from \"../validators-utils\";\n\nfunction Login({ loading, loginUserAsync, guest }) {\n  const [form, setForm] = useState({\n    username: \"\",\n    password: \"\",\n    errors: {\n      username: \"\",\n      password: \"\",\n    },\n  });\n\n  const fillForm = (e) => {\n    const { name, value } = e.target;\n    console.log(name, value);\n    let errors = form.errors;\n    switch (name) {\n      case \"username\":\n        errors.username = value.length < 5 ? \"At least 5 characters!\" : \"\";\n        break;\n      case \"password\":\n        errors.password = value.length < 6 ? \"At least 6 characters!\" : \"\";\n        break;\n      default:\n        break;\n    }\n    setForm({ ...form, errors, [name]: value });\n  };\n\n  const handleLogin = (e) => {\n    if (\n      validateForm(form.errors) &&\n      (e.key === \"Enter\" || e.key === undefined)\n    ) {\n      toast.info(\"Logging in...\", {\n        position: \"top-right\",\n        autoClose: 1000,\n        hideProgressBar: true,\n        closeOnClick: false,\n        pauseOnHover: false,\n        draggable: false,\n        progress: undefined,\n        transition: Slide,\n      });\n      loginUserAsync(form);\n      setForm({\n        username: \"\",\n        password: \"\",\n        errors: { username: \"\", password: \"\" },\n      });\n    }\n  };\n\n  const handleGuestLogin = (e) => {\n    toast.info(\"Logging in as GuestUser...\", {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: true,\n      closeOnClick: false,\n      pauseOnHover: false,\n      draggable: false,\n      progress: undefined,\n      transition: Slide,\n    });\n    loginUserAsync({ ...guest });\n  };\n\n  return (\n    <>\n      <div name=\"loginForm\" className=\"inner-container\">\n        <div className=\"title-section\">\n          <h4>Have an account?</h4>\n        </div>\n        <section className=\"inputs-section\">\n          <div>\n            {form.errors.username.length > 0 && (\n              <span>{form.errors.username}</span>\n            )}\n            <input\n              name=\"username\"\n              value={form.username}\n              onChange={fillForm}\n              type=\"text\"\n              placeholder=\"username\"\n            />\n          </div>\n          <div>\n            {form.errors.password.length > 0 && (\n              <span>{form.errors.password}</span>\n            )}\n            <input\n              name=\"password\"\n              value={form.password}\n              onChange={fillForm}\n              onKeyDown={handleLogin}\n              type=\"password\"\n              placeholder=\"password\"\n            />\n          </div>\n        </section>\n        <section className=\"btn-section\">\n          <button onClick={handleLogin} disabled={loading} className=\"btn\">\n            LOGIN\n          </button>\n          or\n          <button\n            onClick={handleGuestLogin}\n            disabled={loading}\n            className=\"guest-btn\"\n          >\n            Login as Guest\n          </button>\n        </section>\n      </div>\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={1000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick={false}\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable={false}\n        pauseOnHover={false}\n        transport={Slide}\n      />\n    </>\n  );\n}\n\nconst mapStateToProps = ({ user: { loading, guest } }) => ({ loading, guest });\n\nexport default connect(mapStateToProps, { loginUserAsync })(Login);\n","import React, { useState } from \"react\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Axios from \"axios\";\nimport { connect } from \"react-redux\";\n\nimport { validEmailRegex, validateForm } from \"../validators-utils\";\n\nfunction Register({ loading }) {\n  const [form, setForm] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    errors: {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    },\n  });\n\n  const fillForm = (e) => {\n    const { name, value } = e.target;\n    let errors = form.errors;\n    switch (name) {\n      case \"username\":\n        errors.username = value.length < 5 ? \"At least 5 characters!\" : \"\";\n        break;\n      case \"password\":\n        errors.password = value.length < 6 ? \"At least 6 characters!\" : \"\";\n        break;\n      case \"email\":\n        errors.email = validEmailRegex.test(value) ? \"\" : \"Email is not valid!\";\n        break;\n      default:\n        break;\n    }\n    setForm({ ...form, errors, [name]: value });\n  };\n\n  const registerUser = async (e) => {\n    try {\n      if (\n        validateForm(form.errors) &&\n        (e.key === \"Enter\" || e.key === undefined)\n      ) {\n        toast.info(\"Registering...\", {\n          position: \"top-right\",\n          autoClose: 1000,\n          hideProgressBar: true,\n          closeOnClick: false,\n          pauseOnHover: false,\n          draggable: false,\n          progress: undefined,\n          transition: Slide,\n        });\n        await Axios.post(\"/auth/register\", form);\n        toast.success(\"Registration success!\", {\n          position: \"top-right\",\n          autoClose: 1000,\n          hideProgressBar: true,\n          closeOnClick: false,\n          pauseOnHover: false,\n          draggable: false,\n          progress: undefined,\n          transition: Slide,\n        });\n        setForm({\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          errors: {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n          },\n        });\n      }\n    } catch (err) {\n      toast.error(\"User exists!\", {\n        position: \"top-right\",\n        autoClose: 1000,\n        hideProgressBar: true,\n        closeOnClick: false,\n        pauseOnHover: false,\n        draggable: false,\n        progress: undefined,\n        transition: Slide,\n      });\n    }\n  };\n  return (\n    <>\n      <div name=\"registerForm\" className=\"inner-container\">\n        <div className=\"title-section\">\n          <h4>Create an account</h4>\n        </div>\n        <section className=\"inputs-section\">\n          <div>\n            {form.errors.username.length > 0 && (\n              <span>{form.errors.username}</span>\n            )}\n            <input\n              name=\"username\"\n              value={form.username}\n              onChange={fillForm}\n              type=\"text\"\n              placeholder=\"username\"\n            />\n          </div>\n          <div>\n            {form.errors.email.length > 0 && <span>{form.errors.email}</span>}\n            <input\n              name=\"email\"\n              value={form.email}\n              onChange={fillForm}\n              type=\"email\"\n              placeholder=\"email\"\n            />\n          </div>\n          <div>\n            {form.errors.password.length > 0 && (\n              <span>{form.errors.password}</span>\n            )}\n            <input\n              name=\"password\"\n              value={form.password}\n              onChange={fillForm}\n              onKeyDown={registerUser}\n              type=\"password\"\n              placeholder=\"password\"\n            />\n          </div>\n        </section>\n        <section className=\"btn-section\">\n          <button onClick={registerUser} disabled={loading} className=\"btn\">\n            REGISTER\n          </button>\n        </section>\n      </div>\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={1000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick={false}\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable={false}\n        pauseOnHover={false}\n        transport={Slide}\n      />\n    </>\n  );\n}\n\nconst mapStateToProps = ({ user: { loading } }) => ({ loading });\n\nexport default connect(mapStateToProps)(Register);\n","import React from \"react\";\n\nimport Login from \"../../components/Login/Login\";\nimport Register from \"../../components/Register/Register\";\n\nfunction AuthPage() {\n  return (\n    <div className=\"auth-page-container\">\n      <Login />\n      <Register />\n    </div>\n  );\n}\n\nexport default AuthPage;\n","import React from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { editPostAsync, deletePostAsync } from \"../../redux/posts/postsActions\";\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction PostPage({ username, items, editPostAsync, deletePostAsync }) {\n  const history = useHistory();\n  const { id } = useParams();\n  const [editMode, setEditMode] = useState(false);\n  const post = items.find((item) => item._id === id);\n  const [newPost, setNewPost] = useState({\n    editTitle: \"\",\n    editContent: \"\",\n    editImgLink: \"\",\n  });\n\n  const handleEdit = (e) =>\n    setNewPost({ ...newPost, [e.target.name]: e.target.value });\n\n  const handlePostUpdate = () => {\n    const editedPost = {\n      ...post,\n      title: newPost.editTitle,\n      content: newPost.editContent,\n      imglink: newPost.editImgLink,\n      date: new Date().toLocaleString(),\n    };\n    editPostAsync(editedPost);\n    setEditMode(false);\n    setNewPost({ editTitle: \"\", editContent: \"\", editImgLink: \"\" });\n  };\n\n  const cancelEdit = () => {\n    setEditMode(false);\n    setNewPost({\n      editTitle: post.title,\n      editContent: post.content,\n      editImgLink: post.imglink,\n    });\n  };\n\n  const handlePostDelete = () => {\n    deletePostAsync(post._id);\n  };\n\n  const pickRandomImage = () => {\n    setNewPost({\n      ...newPost,\n      editImgLink: `https://picsum.photos/id/${getRandomInt(1, 200)}/500/600`,\n    });\n  };\n\n  return (\n    <div className=\"post-page-container\">\n      {/* <Link to=\"/\"> */}\n      <div onClick={() => history.goBack()} className=\"icon\">\n        <i className=\"fas fa-arrow-left\"></i>\n      </div>\n      {/* </Link> */}\n\n      {editMode ? (\n        <input\n          className=\"edit-input\"\n          value={newPost.newTitle}\n          onChange={handleEdit}\n          placeholder={post.title}\n          name=\"editTitle\"\n        />\n      ) : (\n        <h4>{post.title}</h4>\n      )}\n\n      {username === post.author && (\n        <div className=\"edit-delete-btns\">\n          <div onClick={() => setEditMode(true)} className=\"icon\">\n            <i className=\"fas fa-pen\"></i>\n          </div>\n          <Link to=\"/\">\n            <div onClick={handlePostDelete} className=\"icon\">\n              <i className=\"fas fa-trash\"></i>\n            </div>\n          </Link>\n        </div>\n      )}\n\n      <span className=\"author\">{post.author}</span>\n      <span className=\"date\">{post.date}</span>\n\n      {editMode ? (\n        <textarea\n          cols=\"20\"\n          rows=\"5\"\n          className=\"edit-input\"\n          value={newPost.newContent}\n          onChange={handleEdit}\n          placeholder={post.content}\n          name=\"editContent\"\n        />\n      ) : (\n        <p>{post.content}</p>\n      )}\n\n      {editMode ? (\n        <>\n          <button onClick={pickRandomImage} disabled={!editMode}>\n            Pick random image\n          </button>\n          <img\n            width=\"400\"\n            src={newPost.editImgLink}\n            alt=\"\"\n            style={{ margin: \"15px 0 20px\" }}\n          />\n        </>\n      ) : (\n        <img src={post.imglink} alt=\"\" />\n      )}\n\n      <div className=\"modal-btns\">\n        <Link to=\"/\">\n          <button className=\"btn-post\" onClick={cancelEdit}>\n            Cancel\n          </button>\n        </Link>\n        <button className=\"btn-post\" onClick={handlePostUpdate}>\n          SAVE\n        </button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ user: { username }, posts: { items } }) => ({\n  username,\n  items,\n});\n\nexport default connect(mapStateToProps, { editPostAsync, deletePostAsync })(\n  PostPage\n);\n","import React, { useEffect, Suspense } from \"react\";\nimport \"./App.scss\";\n\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"./redux/user/userActions\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Profile from \"./pages/Profile/Profile\";\nimport AuthPage from \"./pages/AuthPage/AuthPage\";\nimport socket from \"./initSocket\";\nimport Spinner from \"./components/Spinner/Spinner\";\nimport PostPage from \"./pages/PostPage/PostPage\";\n\nconst Home = React.lazy(() => import(\"./pages/Home/Home\"));\nfunction App({ username, isLoggedIn, validUntil, logoutUser }) {\n  useEffect(() => {\n    if (isLoggedIn) {\n      const date = new Date();\n      const currTime = date.getTime() / 1000;\n      if (validUntil <= currTime) {\n        logoutUser();\n        socket.emit(\"user_disconnected\", username);\n      }\n    } else {\n      socket.emit(\"user_disconnected\", username);\n    }\n  }, [isLoggedIn, logoutUser, validUntil, username]);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        {isLoggedIn ? (\n          <Suspense fallback={<Spinner />}>\n            <Home />\n          </Suspense>\n        ) : (\n          <Redirect to=\"/login\" />\n        )}\n      </Route>\n      <Route path=\"/login\">\n        {isLoggedIn ? <Redirect to=\"/\" /> : <AuthPage />}\n      </Route>\n      <Route path={`/profile`}>\n        {isLoggedIn ? <Profile /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route path=\"/:id\">\n        {isLoggedIn ? <PostPage /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route path=\"*\" component={() => <h2>404 Page Not Found</h2>} />\n    </Switch>\n  );\n}\n\nconst mapStateToProps = ({ user: { isLoggedIn, validUntil, username } }) => ({\n  isLoggedIn,\n  validUntil,\n  username,\n});\n\nexport default connect(mapStateToProps, { logoutUser })(App);\n","import UserActionTypes from \"./userTypes\";\nimport Axios from \"axios\";\n\n// LOG IN\nexport const loginUserStart = () => ({ type: UserActionTypes.LOGIN_START });\nexport const loginUserSuccess = (user) => ({\n  type: UserActionTypes.LOGIN_SUCCESS,\n  payload: user,\n});\nexport const loginUserFailure = (errMessage) => ({\n  type: UserActionTypes.LOGIN_FAILURE,\n  payload: errMessage,\n});\nexport const loginUserAsync = (user) => (dispatch) => {\n  dispatch(loginUserStart());\n  Axios.post(\"auth/login\", {\n    username: user.username,\n    password: user.password,\n  })\n    .then((response) => dispatch(loginUserSuccess(response.data)))\n    .catch((err) => dispatch(loginUserFailure(err.message)));\n};\n\n// UPDATE PROFILE\nexport const updateUserStart = () => ({\n  type: UserActionTypes.UPDATE_PROFILE_START,\n});\nexport const updateUserSuccess = (user) => ({\n  type: UserActionTypes.UPDATE_PROFILE_SUCCESS,\n  payload: user,\n});\nexport const updateUserFailure = (errMessage) => ({\n  type: UserActionTypes.UPDATE_PROFILE_FAILURE,\n  payload: errMessage,\n});\nexport const updateUserAsync = (user) => (dispatch) => {\n  dispatch(updateUserStart());\n  Axios.post(`profile/${user.key}`, { [user.key]: user.value })\n    .then((response) => dispatch(updateUserSuccess(response.data)))\n    .catch((err) => dispatch(updateUserFailure(err.message)));\n};\n\n// LOGOUT\nexport const logoutUser = () => ({ type: UserActionTypes.LOGOUT });\n","import io from \"socket.io-client\";\n\nconst socket = io.connect('/', { 'sync disconnect on unload': false })\n\nexport default socket","import PostActionTypes from \"./postsTypes\";\nimport Axios from \"axios\";\n\n// CREATE POST\nexport const createPostStart = () => ({ type: PostActionTypes.NEW_POST_START });\nexport const createPostSuccess = (post) => ({\n  type: PostActionTypes.NEW_POST_SUCCESS,\n  payload: post,\n});\nexport const createPostFailure = (errMessage) => ({\n  type: PostActionTypes.NEW_POST_FAILURE,\n  payload: errMessage,\n});\nexport const createPostAsync = (post) => (dispatch) => {\n  dispatch(createPostStart());\n  Axios.post(\"/post\", post)\n    .then((response) => {\n      dispatch(createPostSuccess(response.data.post));\n    })\n    .catch((err) => dispatch(createPostFailure(err.message)));\n};\n\n// FETCH ALL POSTS\nexport const fetchPostsStart = () => ({\n  type: PostActionTypes.FETCH_POSTS_START,\n});\nexport const fetchPostsSuccess = (posts) => ({\n  type: PostActionTypes.FETCH_POSTS_SUCCESS,\n  payload: posts,\n});\nexport const fetchPostsFailure = (errMessage) => ({\n  type: PostActionTypes.FETCH_POSTS_FAILURE,\n  payload: errMessage,\n});\nexport const fetchPostsAsync = () => (dispatch) => {\n  dispatch(fetchPostsStart());\n  Axios.get(\"/post\")\n    .then((response) =>\n      dispatch(fetchPostsSuccess(response.data.posts.reverse()))\n    )\n    .catch((err) => dispatch(fetchPostsFailure(err.message)));\n};\n\n// EDIT POST\nexport const editPostStart = () => ({ type: PostActionTypes.EDIT_POST_START });\nexport const editPostSuccess = (post) => ({\n  type: PostActionTypes.EDIT_POST_SUCCESS,\n  payload: post,\n});\nexport const editPostFailure = (errMessage) => ({\n  type: PostActionTypes.EDIT_POST_FAILURE,\n  payload: errMessage,\n});\nexport const editPostAsync = (post) => (dispatch) => {\n  dispatch(editPostStart());\n  Axios.post(`/post/${post._id}`, post)\n    .then((response) => dispatch(editPostSuccess(response.data.post)))\n    .catch((err) => dispatch(editPostFailure(err.message)));\n};\n\n// DELETE POST\nexport const deletePostStart = () => ({\n  type: PostActionTypes.DELETE_POST_START,\n});\nexport const deletePostSuccess = (postid) => ({\n  type: PostActionTypes.DELETE_POST_SUCCESS,\n  payload: postid,\n});\nexport const deletePostFailure = (errMessage) => ({\n  type: PostActionTypes.DELETE_POST_FAILURE,\n  payload: errMessage,\n});\nexport const deletePostAsync = (postid) => (dispatch) => {\n  dispatch(deletePostStart());\n  Axios.delete(`/post/${postid}`)\n    .then(() => dispatch(deletePostSuccess(postid)))\n    .catch((err) => dispatch(deletePostFailure(err.message)));\n};\n"],"sourceRoot":""}