{"version":3,"sources":["components/MyPosts/MyPosts.jsx","components/Navbars/ProfileNavBar.jsx","pages/Profile/Profile.jsx","components/validators-utils.js","components/Login/Login.jsx","components/Register/Register.jsx","pages/AuthPage/AuthPage.jsx","pages/PostPage/PostPage.jsx","App.js","redux/user/userActions.js","initSocket.js","redux/posts/postsActions.js"],"names":["MyPosts","myposts","className","length","map","post","idx","key","author","title","date","to","_id","content","src","imglink","alt","connect","logoutUser","username","handleUserDelete","e","a","Axios","socket","emit","console","log","disabled","onClick","user","email","posts","items","areFetching","filter","updateUserAsync","useState","newUsername","setNewUsername","newEmail","setNewEmail","newPassword","setNewPassword","value","onChange","target","type","loading","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","guest","loginUserAsync","password","form","setForm","fillForm","name","handleLogin","undefined","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","transition","Slide","placeholder","onKeyDown","newestOnTop","rtl","pauseOnFocusLoss","transport","test","registerUser","success","error","AuthPage","editPostAsync","deletePostAsync","history","useHistory","id","useParams","editMode","setEditMode","find","item","editTitle","editContent","editImgLink","newPost","setNewPost","handleEdit","goBack","newTitle","cols","rows","newContent","min","max","Math","ceil","floor","random","width","style","margin","editedPost","Date","toLocaleString","Home","React","lazy","isLoggedIn","validUntil","useEffect","currTime","getTime","exact","path","fallback","Spinner","component","dispatch","UserActionTypes","LOGIN_START","then","response","LOGIN_SUCCESS","payload","loginUserSuccess","data","catch","err","errMessage","message","LOGIN_FAILURE","UPDATE_PROFILE_START","UPDATE_PROFILE_SUCCESS","updateUserSuccess","UPDATE_PROFILE_FAILURE","LOGOUT","io","createPostAsync","PostActionTypes","NEW_POST_START","NEW_POST_SUCCESS","createPostSuccess","NEW_POST_FAILURE","fetchPostsAsync","FETCH_POSTS_START","get","reverse","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","EDIT_POST_START","EDIT_POST_SUCCESS","editPostSuccess","EDIT_POST_FAILURE","postid","DELETE_POST_START","delete","DELETE_POST_SUCCESS","deletePostSuccess","DELETE_POST_FAILURE"],"mappings":"gMAoCeA,MAjCf,YAA+B,IAAZC,EAAW,EAAXA,QACjB,OACE,oCACE,wBAAIC,UAAU,6BAAd,YACA,yBAAKA,UAAU,qBACO,IAAnBD,EAAQE,QACPF,EAAQG,KAAI,SAACC,EAAMC,GAAP,OACV,yBAAKC,IAAKD,EAAKJ,UAAU,QACvB,yBAAKA,UAAU,QACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,2BAAIG,EAAKG,QACT,4BAAKH,EAAKI,OACV,8BAAOJ,EAAKK,OAEd,yBAAKR,UAAU,QACb,kBAAC,IAAD,CAAMS,GAAE,WAAMN,EAAKO,MACjB,uBAAGV,UAAU,kBAInB,yBAAKA,UAAU,UACb,2BAAIG,EAAKQ,WAGb,yBAAKC,IAAKT,EAAKU,QAASC,IAAI,Y,kDCS3BC,kBAAQ,KAAM,CAAEC,gBAAhBD,EA7Bf,YAAkD,IAAzBE,EAAwB,EAAxBA,SAAUD,EAAc,EAAdA,WAC3BE,EAAgB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EAEfC,IAAMlB,KAAK,WAAY,CAAEc,aAFV,OAGrBK,IAAOC,KAAK,oBAAqBN,GACjCD,IAJqB,gDAMrBQ,QAAQC,IAAI,+BANS,yDAAH,sDAUtB,OACE,yBAAKzB,UAAU,eACb,kBAAC,IAAD,CAAMS,GAAG,KACP,yBAAKT,UAAU,QACb,uBAAGA,UAAU,wBAGjB,4BACE0B,SAAuB,cAAbT,EACVU,QAAST,EACTlB,UAAU,QAEV,uBAAGA,UAAU,2BCkErB,IAUee,eAVS,SAAC,GAAD,QACtBa,KAAQX,EADc,EACdA,SAAUY,EADI,EACJA,MADI,IAEtBC,MAASC,EAFa,EAEbA,MAAOC,EAFM,EAENA,YAFM,MAGjB,CACLjC,QAASgC,EAAME,QAAO,SAAC9B,GAAD,OAAUA,EAAKG,SAAWW,KAChDA,WACAY,QACAG,iBAGsC,CAAEE,qBAA3BnB,EApGf,YAA8E,IAA3DE,EAA0D,EAA1DA,SAAUY,EAAgD,EAAhDA,MAAOG,EAAyC,EAAzCA,YAAajC,EAA4B,EAA5BA,QAASmC,EAAmB,EAAnBA,gBAAmB,EACrCC,mBAAS,IAD4B,mBACpEC,EADoE,KACvDC,EADuD,OAE3CF,mBAAS,IAFkC,mBAEpEG,EAFoE,KAE1DC,EAF0D,OAGrCJ,mBAAS,IAH4B,mBAGpEK,EAHoE,KAGvDC,EAHuD,KAK3E,OACE,0BAAMzC,UAAU,0BACd,kBAAC,EAAD,CAAeiB,SAAUA,IACzB,yBAAKjB,UAAU,oBACb,4BAAKiB,IAEO,cAAbA,EACC,yBAAKjB,UAAU,SAAf,0CACE,KACJ,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,gBACb,2BAAIiB,GACJ,2BACEyB,MAAON,EACPO,SAAU,SAACxB,GAAD,OAAOkB,EAAelB,EAAEyB,OAAOF,QACzChB,SAAuB,cAAbT,EACV4B,KAAK,SAEP,4BACElB,QAAS,kBACPO,EAAgB,CACd7B,IAAK,WACLqC,MAAON,MAJb,SAWF,yBAAKpC,UAAU,UACb,yCAGJ,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,gBACb,2BAAI6B,GACJ,2BACEa,MAAOJ,EACPK,SAAU,SAACxB,GAAD,OAAOoB,EAAYpB,EAAEyB,OAAOF,QACtChB,SAAuB,cAAbT,EACV4B,KAAK,UAEP,4BACElB,QAAS,kBACPO,EAAgB,CACd7B,IAAK,QACLqC,MAAOJ,MAJb,SAWF,yBAAKtC,UAAU,UACb,sCAGJ,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,gBACb,2BACE0C,MAAOF,EACPG,SAAU,SAACxB,GAAD,OAAOsB,EAAetB,EAAEyB,OAAOF,QACzChB,SAAuB,cAAbT,EACV4B,KAAK,aAEP,4BACElB,QAAS,kBACPO,EAAgB,CACd7B,IAAK,WACLqC,MAAOF,MAJb,SAWF,yBAAKxC,UAAU,UACb,yCAGJ,kBAAC,EAAD,CAAS8C,QAASd,EAAajC,QAASA,Q,uBC5FjCgD,G,MAAkBC,OAC7B,wJAEWC,EAAe,SAACC,GAC3B,IAAIC,GAAQ,EAEZ,OADAC,OAAOC,OAAOH,GAAQI,SAAQ,SAACC,GAAD,OAASA,EAAItD,OAAS,IAAMkD,GAAQ,MAC3DA,GCmIT,IAEepC,eAFS,SAAC,GAAD,QAAGa,KAAH,MAAmC,CAAEkB,QAArC,EAAWA,QAAmCU,MAA9C,EAAoBA,SAEJ,CAAEC,oBAA3B1C,EAnIf,YAAoD,IAAnC+B,EAAkC,EAAlCA,QAASW,EAAyB,EAAzBA,eAAgBD,EAAS,EAATA,MAAS,EACzBrB,mBAAS,CAC/BlB,SAAU,GACVyC,SAAU,GACVR,OAAQ,CACNjC,SAAU,GACVyC,SAAU,MANmC,mBAC1CC,EAD0C,KACpCC,EADoC,KAU3CC,EAAW,SAAC1C,GAAO,IAAD,EACEA,EAAEyB,OAAlBkB,EADc,EACdA,KAAMpB,EADQ,EACRA,MACdlB,QAAQC,IAAIqC,EAAMpB,GAClB,IAAIQ,EAASS,EAAKT,OAClB,OAAQY,GACN,IAAK,WACHZ,EAAOjC,SAAWyB,EAAMzC,OAAS,EAAI,yBAA2B,GAChE,MACF,IAAK,WACHiD,EAAOQ,SAAWhB,EAAMzC,OAAS,EAAI,yBAA2B,GAKpE2D,EAAQ,2BAAKD,GAAN,gBAAYT,UAASY,EAAOpB,MAG/BqB,EAAc,SAAC5C,IAEjB8B,EAAaU,EAAKT,SACP,UAAV/B,EAAEd,UAA6B2D,IAAV7C,EAAEd,MAExB4D,IAAMC,KAAK,gBAAiB,CAC1BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUT,EACVU,WAAYC,MAEdlB,EAAeE,GACfC,EAAQ,CACN3C,SAAU,GACVyC,SAAU,GACVR,OAAQ,CAAEjC,SAAU,GAAIyC,SAAU,QAmBxC,OACE,oCACE,yBAAKI,KAAK,YAAY9D,UAAU,mBAC9B,yBAAKA,UAAU,iBACb,iDAEF,6BAASA,UAAU,kBACjB,6BACG2D,EAAKT,OAAOjC,SAAShB,OAAS,GAC7B,8BAAO0D,EAAKT,OAAOjC,UAErB,2BACE6C,KAAK,WACLpB,MAAOiB,EAAK1C,SACZ0B,SAAUkB,EACVhB,KAAK,OACL+B,YAAY,cAGhB,6BACGjB,EAAKT,OAAOQ,SAASzD,OAAS,GAC7B,8BAAO0D,EAAKT,OAAOQ,UAErB,2BACEI,KAAK,WACLpB,MAAOiB,EAAKD,SACZf,SAAUkB,EACVgB,UAAWd,EACXlB,KAAK,WACL+B,YAAY,eAIlB,6BAAS5E,UAAU,eACjB,4BAAQ2B,QAASoC,EAAarC,SAAUoB,EAAS9C,UAAU,OAA3D,SADF,KAKE,4BACE2B,QArDe,SAACR,GACxB8C,IAAMC,KAAK,6BAA8B,CACvCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUT,EACVU,WAAYC,MAEdlB,EAAe,eAAKD,KA2CZ9B,SAAUoB,EACV9C,UAAU,aAHZ,oBAUJ,kBAAC,IAAD,CACEmE,SAAS,YACTC,UAAW,IACXC,iBAAe,EACfS,aAAa,EACbR,cAAc,EACdS,KAAK,EACLC,kBAAkB,EAClBR,WAAW,EACXD,cAAc,EACdU,UAAWN,UCyBnB,IAEe5D,eAFS,SAAC,GAAD,MAA4B,CAAE+B,QAA9B,EAAGlB,KAAQkB,WAEpB/B,EAtJf,YAAgC,IAAZ+B,EAAW,EAAXA,QAAW,EACLX,mBAAS,CAC/BlB,SAAU,GACVY,MAAO,GACP6B,SAAU,GACVR,OAAQ,CACNjC,SAAU,GACVY,MAAO,GACP6B,SAAU,MARe,mBACtBC,EADsB,KAChBC,EADgB,KAYvBC,EAAW,SAAC1C,GAAO,IAAD,EACEA,EAAEyB,OAAlBkB,EADc,EACdA,KAAMpB,EADQ,EACRA,MACVQ,EAASS,EAAKT,OAClB,OAAQY,GACN,IAAK,WACHZ,EAAOjC,SAAWyB,EAAMzC,OAAS,EAAI,yBAA2B,GAChE,MACF,IAAK,WACHiD,EAAOQ,SAAWhB,EAAMzC,OAAS,EAAI,yBAA2B,GAChE,MACF,IAAK,QACHiD,EAAOrB,MAAQkB,EAAgBmC,KAAKxC,GAAS,GAAK,sBAKtDkB,EAAQ,2BAAKD,GAAN,gBAAYT,UAASY,EAAOpB,MAG/ByC,EAAY,uCAAG,WAAOhE,GAAP,SAAAC,EAAA,mEAGf6B,EAAaU,EAAKT,SACP,UAAV/B,EAAEd,UAA6B2D,IAAV7C,EAAEd,IAJT,uBAMf4D,IAAMC,KAAK,iBAAkB,CAC3BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUT,EACVU,WAAYC,MAdC,SAgBTtD,IAAMlB,KAAK,iBAAkBwD,GAhBpB,OAiBfM,IAAMmB,QAAQ,wBAAyB,CACrCjB,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUT,EACVU,WAAYC,MAEdf,EAAQ,CACN3C,SAAU,GACVY,MAAO,GACP6B,SAAU,GACVR,OAAQ,CACNjC,SAAU,GACVY,MAAO,GACP6B,SAAU,MAlCC,uDAuCjBO,IAAMoB,MAAM,eAAgB,CAC1BlB,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUT,EACVU,WAAYC,MA/CG,yDAAH,sDAmDlB,OACE,oCACE,yBAAKb,KAAK,eAAe9D,UAAU,mBACjC,yBAAKA,UAAU,iBACb,kDAEF,6BAASA,UAAU,kBACjB,6BACG2D,EAAKT,OAAOjC,SAAShB,OAAS,GAC7B,8BAAO0D,EAAKT,OAAOjC,UAErB,2BACE6C,KAAK,WACLpB,MAAOiB,EAAK1C,SACZ0B,SAAUkB,EACVhB,KAAK,OACL+B,YAAY,cAGhB,6BACGjB,EAAKT,OAAOrB,MAAM5B,OAAS,GAAK,8BAAO0D,EAAKT,OAAOrB,OACpD,2BACEiC,KAAK,QACLpB,MAAOiB,EAAK9B,MACZc,SAAUkB,EACVhB,KAAK,QACL+B,YAAY,WAGhB,6BACGjB,EAAKT,OAAOQ,SAASzD,OAAS,GAC7B,8BAAO0D,EAAKT,OAAOQ,UAErB,2BACEI,KAAK,WACLpB,MAAOiB,EAAKD,SACZf,SAAUkB,EACVgB,UAAWM,EACXtC,KAAK,WACL+B,YAAY,eAIlB,6BAAS5E,UAAU,eACjB,4BAAQ2B,QAASwD,EAAczD,SAAUoB,EAAS9C,UAAU,OAA5D,cAMJ,kBAAC,IAAD,CACEmE,SAAS,YACTC,UAAW,IACXC,iBAAe,EACfS,aAAa,EACbR,cAAc,EACdS,KAAK,EACLC,kBAAkB,EAClBR,WAAW,EACXD,cAAc,EACdU,UAAWN,UCxIJW,MATf,WACE,OACE,yBAAKtF,UAAU,uBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,gBCmIN,IAKee,eALS,SAAC,GAAD,MAA+C,CACrEE,SADsB,EAAGW,KAAQX,SAEjCc,MAFsB,EAAuBD,MAASC,SAKhB,CAAEwD,kBAAeC,qBAA1CzE,EApIf,YAAwE,IAApDE,EAAmD,EAAnDA,SAAUc,EAAyC,EAAzCA,MAAOwD,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,gBAC5CC,EAAUC,cACRC,EAAOC,cAAPD,GAF6D,EAGrCxD,oBAAS,GAH4B,mBAG9D0D,EAH8D,KAGpDC,EAHoD,KAI/D3F,EAAO4B,EAAMgE,MAAK,SAACC,GAAD,OAAUA,EAAKtF,MAAQiF,KAJsB,EAKvCxD,mBAAS,CACrC8D,UAAW,GACXC,YAAa,GACbC,YAAa,KARsD,mBAK9DC,EAL8D,KAKrDC,EALqD,KAW/DC,EAAa,SAACnF,GAAD,OACjBkF,EAAW,2BAAKD,GAAN,kBAAgBjF,EAAEyB,OAAOkB,KAAO3C,EAAEyB,OAAOF,UAmCrD,OACE,yBAAK1C,UAAU,uBAEb,yBAAK2B,QAAS,kBAAM8D,EAAQc,UAAUvG,UAAU,QAC9C,uBAAGA,UAAU,uBAId6F,EACC,2BACE7F,UAAU,aACV0C,MAAO0D,EAAQI,SACf7D,SAAU2D,EACV1B,YAAazE,EAAKI,MAClBuD,KAAK,cAGP,4BAAK3D,EAAKI,OAGXU,IAAad,EAAKG,QACjB,yBAAKN,UAAU,oBACb,yBAAK2B,QAAS,kBAAMmE,GAAY,IAAO9F,UAAU,QAC/C,uBAAGA,UAAU,gBAEf,kBAAC,IAAD,CAAMS,GAAG,KACP,yBAAKkB,QArCU,WACvB6D,EAAgBrF,EAAKO,MAoCmBV,UAAU,QACxC,uBAAGA,UAAU,oBAMrB,0BAAMA,UAAU,UAAUG,EAAKG,QAC/B,0BAAMN,UAAU,QAAQG,EAAKK,MAE5BqF,EACC,8BACEY,KAAK,KACLC,KAAK,IACL1G,UAAU,aACV0C,MAAO0D,EAAQO,WACfhE,SAAU2D,EACV1B,YAAazE,EAAKQ,QAClBmD,KAAK,gBAGP,2BAAI3D,EAAKQ,SAGVkF,EACC,oCACE,4BAAQlE,QA3DQ,WA9C1B,IAAsBiF,EAAKC,EA+CvBR,EAAW,2BACND,GADK,IAERD,YAAY,4BAAD,QAjDKS,EAiDsC,EAjDjCC,EAiDoC,IAhD7DD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,GA8CtC,gBAwD2BlF,UAAWmE,GAA7C,qBAGA,yBACEqB,MAAM,MACNtG,IAAKwF,EAAQD,YACbrF,IAAI,GACJqG,MAAO,CAAEC,OAAQ,kBAIrB,yBAAKxG,IAAKT,EAAKU,QAASC,IAAI,KAG9B,yBAAKd,UAAU,cACb,kBAAC,IAAD,CAAMS,GAAG,KACP,4BAAQT,UAAU,WAAW2B,QAxFlB,WACjBmE,GAAY,GACZO,EAAW,CACTJ,UAAW9F,EAAKI,MAChB2F,YAAa/F,EAAKQ,QAClBwF,YAAahG,EAAKU,YAmFd,WAIF,4BAAQb,UAAU,WAAW2B,QAzGV,WACvB,IAAM0F,EAAU,2BACXlH,GADW,IAEdI,MAAO6F,EAAQH,UACftF,QAASyF,EAAQF,YACjBrF,QAASuF,EAAQD,YACjB3F,MAAM,IAAI8G,MAAOC,mBAEnBhC,EAAc8B,GACdvB,GAAY,GACZO,EAAW,CAAEJ,UAAW,GAAIC,YAAa,GAAIC,YAAa,OA+FtD,aCvHFqB,EAAOC,IAAMC,MAAK,kBAAM,uDA8Cf3G,uBANS,SAAC,GAAD,QAAGa,KAAH,MAAqD,CAC3E+F,WADsB,EAAWA,WAEjCC,WAFsB,EAAuBA,WAG7C3G,SAHsB,EAAmCA,YAMnB,CAAED,gBAA3BD,EA7Cf,YAAgE,IAAjDE,EAAgD,EAAhDA,SAAU0G,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,WAAY5G,EAAc,EAAdA,WAc/C,OAbA6G,qBAAU,WACR,GAAIF,EAAY,CACd,IACMG,GADO,IAAIR,MACKS,UAAY,IAC9BH,GAAcE,IAChB9G,IACAM,IAAOC,KAAK,oBAAqBN,SAGnCK,IAAOC,KAAK,oBAAqBN,KAElC,CAAC0G,EAAY3G,EAAY4G,EAAY3G,IAGtC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+G,OAAK,EAACC,KAAK,KACfN,EACC,kBAAC,WAAD,CAAUO,SAAU,kBAACC,EAAA,EAAD,OAClB,kBAACX,EAAD,OAGF,kBAAC,IAAD,CAAU/G,GAAG,YAGjB,kBAAC,IAAD,CAAOwH,KAAK,UACTN,EAAa,kBAAC,IAAD,CAAUlH,GAAG,MAAS,kBAAC,EAAD,OAEtC,kBAAC,IAAD,CAAOwH,KAAI,YACRN,EAAa,kBAAC,EAAD,MAAc,kBAAC,IAAD,CAAUlH,GAAG,YAE3C,kBAAC,IAAD,CAAOwH,KAAK,QACTN,EAAa,kBAAC,EAAD,MAAe,kBAAC,IAAD,CAAUlH,GAAG,YAE5C,kBAAC,IAAD,CAAOwH,KAAK,IAAIG,UAAW,kBAAM,0D,2KCnC1B3E,EAAiB,SAAC7B,GAAD,OAAU,SAACyG,GACvCA,EAVmC,CAAExF,KAAMyF,IAAgBC,cAW3DlH,IAAMlB,KAAK,aAAc,CACvBc,SAAUW,EAAKX,SACfyC,SAAU9B,EAAK8B,WAEd8E,MAAK,SAACC,GAAD,OAAcJ,EAdQ,SAACzG,GAAD,MAAW,CACzCiB,KAAMyF,IAAgBI,cACtBC,QAAS/G,GAYsBgH,CAAiBH,EAASI,UACtDC,OAAM,SAACC,GAAD,OAASV,GAXaW,EAWaD,EAAIE,QAXD,CAC/CpG,KAAMyF,IAAgBY,cACtBP,QAASK,KAFqB,IAACA,OA0BpB9G,EAAkB,SAACN,GAAD,OAAU,SAACyG,GACxCA,EAZoC,CACpCxF,KAAMyF,IAAgBa,uBAYtB9H,IAAMlB,KAAN,kBAAsByB,EAAKvB,KAA3B,eAAqCuB,EAAKvB,IAAMuB,EAAKc,QAClD8F,MAAK,SAACC,GAAD,OAAcJ,EAXS,SAACzG,GAAD,MAAW,CAC1CiB,KAAMyF,IAAgBc,uBACtBT,QAAS/G,GASsByH,CAAkBZ,EAASI,UACvDC,OAAM,SAACC,GAAD,OAASV,GARcW,EAQaD,EAAIE,QARD,CAChDpG,KAAMyF,IAAgBgB,uBACtBX,QAASK,KAFsB,IAACA,OAYrBhI,EAAa,iBAAO,CAAE6B,KAAMyF,IAAgBiB,U,gCC3CzD,aAEMjI,EAFN,OAEekI,EAAGzI,QAAQ,IAAK,CAAE,6BAA6B,IAE/CO,O,gCCJf,oKAaamI,EAAkB,SAACtJ,GAAD,OAAU,SAACkI,GACxCA,EAVoC,CAAExF,KAAM6G,IAAgBC,iBAW5DtI,IAAMlB,KAAK,QAASA,GACjBqI,MAAK,SAACC,GACLJ,EAZ2B,SAAClI,GAAD,MAAW,CAC1C0C,KAAM6G,IAAgBE,iBACtBjB,QAASxI,GAUI0J,CAAkBpB,EAASI,KAAK1I,UAE1C2I,OAAM,SAACC,GAAD,OAASV,GAVcW,EAUaD,EAAIE,QAVD,CAChDpG,KAAM6G,IAAgBI,iBACtBnB,QAASK,KAFsB,IAACA,OAyBrBe,EAAkB,kBAAM,SAAC1B,GACpCA,EAZoC,CACpCxF,KAAM6G,IAAgBM,oBAYtB3I,IAAM4I,IAAI,SACPzB,MAAK,SAACC,GAAD,OACJJ,GAZ4BvG,EAYD2G,EAASI,KAAK/G,MAAMoI,UAZR,CAC3CrH,KAAM6G,IAAgBS,oBACtBxB,QAAS7G,KAFsB,IAACA,KAc7BgH,OAAM,SAACC,GAAD,OAASV,GAVcW,EAUaD,EAAIE,QAVD,CAChDpG,KAAM6G,IAAgBU,oBACtBzB,QAASK,KAFsB,IAACA,OAuBrBzD,EAAgB,SAACpF,GAAD,OAAU,SAACkI,GACtCA,EAVkC,CAAExF,KAAM6G,IAAgBW,kBAW1DhJ,IAAMlB,KAAN,gBAAoBA,EAAKO,KAAOP,GAC7BqI,MAAK,SAACC,GAAD,OAAcJ,EAXO,SAAClI,GAAD,MAAW,CACxC0C,KAAM6G,IAAgBY,kBACtB3B,QAASxI,GASsBoK,CAAgB9B,EAASI,KAAK1I,UAC1D2I,OAAM,SAACC,GAAD,OAASV,GARYW,EAQaD,EAAIE,QARD,CAC9CpG,KAAM6G,IAAgBc,kBACtB7B,QAASK,KAFoB,IAACA,OAuBnBxD,EAAkB,SAACiF,GAAD,OAAY,SAACpC,GAC1CA,EAZoC,CACpCxF,KAAM6G,IAAgBgB,oBAYtBrJ,IAAMsJ,OAAN,gBAAsBF,IACnBjC,MAAK,kBAAMH,EAXiB,SAACoC,GAAD,MAAa,CAC5C5H,KAAM6G,IAAgBkB,oBACtBjC,QAAS8B,GAScI,CAAkBJ,OACtC3B,OAAM,SAACC,GAAD,OAASV,GARcW,EAQaD,EAAIE,QARD,CAChDpG,KAAM6G,IAAgBoB,oBACtBnC,QAASK,KAFsB,IAACA,Q","file":"static/js/5.48c69855.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction MyPosts({ myposts }) {\r\n  return (\r\n    <>\r\n      <h3 className=\"text-center bg-light py-4\">MY POSTS</h3>\r\n      <div className=\"myposts-container\">\r\n        {myposts.length !== 0 &&\r\n          myposts.map((post, idx) => (\r\n            <div key={idx} className=\"post\">\r\n              <div className=\"left\">\r\n                <div className=\"top\">\r\n                  <div className=\"userdata\">\r\n                    <p>{post.author}</p>\r\n                    <h4>{post.title}</h4>\r\n                    <span>{post.date}</span>\r\n                  </div>\r\n                  <div className=\"icon\">\r\n                    <Link to={`/${post._id}`}>\r\n                      <i className=\"fas fa-eye\"></i>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                  <p>{post.content}</p>\r\n                </div>\r\n              </div>\r\n              <img src={post.imglink} alt=\"\" />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Axios from \"axios\";\r\n\r\nimport { logoutUser } from \"../../redux/user/userActions\";\r\nimport socket from \"../../initSocket\";\r\n\r\nfunction ProfileNavBar({ username, logoutUser }) {\r\n  const handleUserDelete = async (e) => {\r\n    try {\r\n      await Axios.post(\"/profile\", { username });\r\n      socket.emit(\"user_disconnected\", username);\r\n      logoutUser();\r\n    } catch (err) {\r\n      console.log(\"Error when deleting account\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"profile-nav\">\r\n      <Link to=\"/\">\r\n        <div className=\"icon\">\r\n          <i className=\"fas fa-arrow-left\"></i>\r\n        </div>\r\n      </Link>\r\n      <button\r\n        disabled={username === \"GuestUser\" ? true : false}\r\n        onClick={handleUserDelete}\r\n        className=\"icon\"\r\n      >\r\n        <i className=\"fas fa-user-slash\"></i>\r\n      </button>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default connect(null, { logoutUser })(ProfileNavBar);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { updateUserAsync } from \"../../redux/user/userActions\";\r\nimport MyPosts from \"../../components/MyPosts/MyPosts\";\r\nimport ProfileNavBar from \"../../components/Navbars/ProfileNavBar\";\r\n\r\nfunction Profile({ username, email, areFetching, myposts, updateUserAsync }) {\r\n  const [newUsername, setNewUsername] = useState(\"\");\r\n  const [newEmail, setNewEmail] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n  return (\r\n    <main className=\"profile-page-container\">\r\n      <ProfileNavBar username={username} />\r\n      <div className=\"profile-username\">\r\n        <h3>{username}</h3>\r\n      </div>\r\n      {username === \"GuestUser\" ? (\r\n        <div className=\"alert\">GuestUsers cannot edit profile details</div>\r\n      ) : null}\r\n      <div className=\"profile-details-card\">\r\n        <div className=\"details-edit\">\r\n          <p>{username}</p>\r\n          <input\r\n            value={newUsername}\r\n            onChange={(e) => setNewUsername(e.target.value)}\r\n            disabled={username === \"GuestUser\" ? true : false}\r\n            type=\"text\"\r\n          />\r\n          <button\r\n            onClick={() =>\r\n              updateUserAsync({\r\n                key: \"username\",\r\n                value: newUsername,\r\n              })\r\n            }\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n        <div className=\"detail\">\r\n          <p>Username</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"profile-details-card\">\r\n        <div className=\"details-edit\">\r\n          <p>{email}</p>\r\n          <input\r\n            value={newEmail}\r\n            onChange={(e) => setNewEmail(e.target.value)}\r\n            disabled={username === \"GuestUser\" ? true : false}\r\n            type=\"email\"\r\n          />\r\n          <button\r\n            onClick={() =>\r\n              updateUserAsync({\r\n                key: \"email\",\r\n                value: newEmail,\r\n              })\r\n            }\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n        <div className=\"detail\">\r\n          <p>Email</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"profile-details-card\">\r\n        <div className=\"details-edit\">\r\n          <input\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            disabled={username === \"GuestUser\" ? true : false}\r\n            type=\"password\"\r\n          />\r\n          <button\r\n            onClick={() =>\r\n              updateUserAsync({\r\n                key: \"password\",\r\n                value: newPassword,\r\n              })\r\n            }\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n        <div className=\"detail\">\r\n          <p>Password</p>\r\n        </div>\r\n      </div>\r\n      <MyPosts loading={areFetching} myposts={myposts} />\r\n    </main>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  user: { username, email },\r\n  posts: { items, areFetching },\r\n}) => ({\r\n  myposts: items.filter((post) => post.author === username),\r\n  username,\r\n  email,\r\n  areFetching,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateUserAsync })(Profile);\r\n","export const validEmailRegex = RegExp(\r\n  /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n);\r\nexport const validateForm = (errors) => {\r\n  let valid = true;\r\n  Object.values(errors).forEach((val) => val.length > 0 && (valid = false));\r\n  return valid;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { loginUserAsync } from \"../../redux/user/userActions\";\r\nimport { validateForm } from \"../validators-utils\";\r\n\r\nfunction Login({ loading, loginUserAsync, guest }) {\r\n  const [form, setForm] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    errors: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n\r\n  const fillForm = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(name, value);\r\n    let errors = form.errors;\r\n    switch (name) {\r\n      case \"username\":\r\n        errors.username = value.length < 5 ? \"At least 5 characters!\" : \"\";\r\n        break;\r\n      case \"password\":\r\n        errors.password = value.length < 6 ? \"At least 6 characters!\" : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setForm({ ...form, errors, [name]: value });\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    if (\r\n      validateForm(form.errors) &&\r\n      (e.key === \"Enter\" || e.key === undefined)\r\n    ) {\r\n      toast.info(\"Logging in...\", {\r\n        position: \"top-right\",\r\n        autoClose: 1000,\r\n        hideProgressBar: true,\r\n        closeOnClick: false,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        progress: undefined,\r\n        transition: Slide,\r\n      });\r\n      loginUserAsync(form);\r\n      setForm({\r\n        username: \"\",\r\n        password: \"\",\r\n        errors: { username: \"\", password: \"\" },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleGuestLogin = (e) => {\r\n    toast.info(\"Logging in as GuestUser...\", {\r\n      position: \"top-right\",\r\n      autoClose: 1000,\r\n      hideProgressBar: true,\r\n      closeOnClick: false,\r\n      pauseOnHover: false,\r\n      draggable: false,\r\n      progress: undefined,\r\n      transition: Slide,\r\n    });\r\n    loginUserAsync({ ...guest });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div name=\"loginForm\" className=\"inner-container\">\r\n        <div className=\"title-section\">\r\n          <h4>Have an account?</h4>\r\n        </div>\r\n        <section className=\"inputs-section\">\r\n          <div>\r\n            {form.errors.username.length > 0 && (\r\n              <span>{form.errors.username}</span>\r\n            )}\r\n            <input\r\n              name=\"username\"\r\n              value={form.username}\r\n              onChange={fillForm}\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n            />\r\n          </div>\r\n          <div>\r\n            {form.errors.password.length > 0 && (\r\n              <span>{form.errors.password}</span>\r\n            )}\r\n            <input\r\n              name=\"password\"\r\n              value={form.password}\r\n              onChange={fillForm}\r\n              onKeyDown={handleLogin}\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n            />\r\n          </div>\r\n        </section>\r\n        <section className=\"btn-section\">\r\n          <button onClick={handleLogin} disabled={loading} className=\"btn\">\r\n            LOGIN\r\n          </button>\r\n          or\r\n          <button\r\n            onClick={handleGuestLogin}\r\n            disabled={loading}\r\n            className=\"guest-btn\"\r\n          >\r\n            Login as Guest\r\n          </button>\r\n        </section>\r\n      </div>\r\n\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={1000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick={false}\r\n        rtl={false}\r\n        pauseOnFocusLoss={false}\r\n        draggable={false}\r\n        pauseOnHover={false}\r\n        transport={Slide}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ user: { loading, guest } }) => ({ loading, guest });\r\n\r\nexport default connect(mapStateToProps, { loginUserAsync })(Login);\r\n","import React, { useState } from \"react\";\r\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { validEmailRegex, validateForm } from \"../validators-utils\";\r\n\r\nfunction Register({ loading }) {\r\n  const [form, setForm] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n\r\n  const fillForm = (e) => {\r\n    const { name, value } = e.target;\r\n    let errors = form.errors;\r\n    switch (name) {\r\n      case \"username\":\r\n        errors.username = value.length < 5 ? \"At least 5 characters!\" : \"\";\r\n        break;\r\n      case \"password\":\r\n        errors.password = value.length < 6 ? \"At least 6 characters!\" : \"\";\r\n        break;\r\n      case \"email\":\r\n        errors.email = validEmailRegex.test(value) ? \"\" : \"Email is not valid!\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setForm({ ...form, errors, [name]: value });\r\n  };\r\n\r\n  const registerUser = async (e) => {\r\n    try {\r\n      if (\r\n        validateForm(form.errors) &&\r\n        (e.key === \"Enter\" || e.key === undefined)\r\n      ) {\r\n        toast.info(\"Registering...\", {\r\n          position: \"top-right\",\r\n          autoClose: 1000,\r\n          hideProgressBar: true,\r\n          closeOnClick: false,\r\n          pauseOnHover: false,\r\n          draggable: false,\r\n          progress: undefined,\r\n          transition: Slide,\r\n        });\r\n        await Axios.post(\"/auth/register\", form);\r\n        toast.success(\"Registration success!\", {\r\n          position: \"top-right\",\r\n          autoClose: 1000,\r\n          hideProgressBar: true,\r\n          closeOnClick: false,\r\n          pauseOnHover: false,\r\n          draggable: false,\r\n          progress: undefined,\r\n          transition: Slide,\r\n        });\r\n        setForm({\r\n          username: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          errors: {\r\n            username: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n          },\r\n        });\r\n      }\r\n    } catch (err) {\r\n      toast.error(\"User exists!\", {\r\n        position: \"top-right\",\r\n        autoClose: 1000,\r\n        hideProgressBar: true,\r\n        closeOnClick: false,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        progress: undefined,\r\n        transition: Slide,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div name=\"registerForm\" className=\"inner-container\">\r\n        <div className=\"title-section\">\r\n          <h4>Create an account</h4>\r\n        </div>\r\n        <section className=\"inputs-section\">\r\n          <div>\r\n            {form.errors.username.length > 0 && (\r\n              <span>{form.errors.username}</span>\r\n            )}\r\n            <input\r\n              name=\"username\"\r\n              value={form.username}\r\n              onChange={fillForm}\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n            />\r\n          </div>\r\n          <div>\r\n            {form.errors.email.length > 0 && <span>{form.errors.email}</span>}\r\n            <input\r\n              name=\"email\"\r\n              value={form.email}\r\n              onChange={fillForm}\r\n              type=\"email\"\r\n              placeholder=\"email\"\r\n            />\r\n          </div>\r\n          <div>\r\n            {form.errors.password.length > 0 && (\r\n              <span>{form.errors.password}</span>\r\n            )}\r\n            <input\r\n              name=\"password\"\r\n              value={form.password}\r\n              onChange={fillForm}\r\n              onKeyDown={registerUser}\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n            />\r\n          </div>\r\n        </section>\r\n        <section className=\"btn-section\">\r\n          <button onClick={registerUser} disabled={loading} className=\"btn\">\r\n            REGISTER\r\n          </button>\r\n        </section>\r\n      </div>\r\n\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={1000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick={false}\r\n        rtl={false}\r\n        pauseOnFocusLoss={false}\r\n        draggable={false}\r\n        pauseOnHover={false}\r\n        transport={Slide}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ user: { loading } }) => ({ loading });\r\n\r\nexport default connect(mapStateToProps)(Register);\r\n","import React from \"react\";\r\n\r\nimport Login from \"../../components/Login/Login\";\r\nimport Register from \"../../components/Register/Register\";\r\n\r\nfunction AuthPage() {\r\n  return (\r\n    <div className=\"auth-page-container\">\r\n      <Login />\r\n      <Register />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthPage;\r\n","import React from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { editPostAsync, deletePostAsync } from \"../../redux/posts/postsActions\";\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction PostPage({ username, items, editPostAsync, deletePostAsync }) {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const [editMode, setEditMode] = useState(false);\r\n  const post = items.find((item) => item._id === id);\r\n  const [newPost, setNewPost] = useState({\r\n    editTitle: \"\",\r\n    editContent: \"\",\r\n    editImgLink: \"\",\r\n  });\r\n\r\n  const handleEdit = (e) =>\r\n    setNewPost({ ...newPost, [e.target.name]: e.target.value });\r\n\r\n  const handlePostUpdate = () => {\r\n    const editedPost = {\r\n      ...post,\r\n      title: newPost.editTitle,\r\n      content: newPost.editContent,\r\n      imglink: newPost.editImgLink,\r\n      date: new Date().toLocaleString(),\r\n    };\r\n    editPostAsync(editedPost);\r\n    setEditMode(false);\r\n    setNewPost({ editTitle: \"\", editContent: \"\", editImgLink: \"\" });\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setEditMode(false);\r\n    setNewPost({\r\n      editTitle: post.title,\r\n      editContent: post.content,\r\n      editImgLink: post.imglink,\r\n    });\r\n  };\r\n\r\n  const handlePostDelete = () => {\r\n    deletePostAsync(post._id);\r\n  };\r\n\r\n  const pickRandomImage = () => {\r\n    setNewPost({\r\n      ...newPost,\r\n      editImgLink: `https://picsum.photos/id/${getRandomInt(1, 200)}/500/600`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-page-container\">\r\n      {/* <Link to=\"/\"> */}\r\n      <div onClick={() => history.goBack()} className=\"icon\">\r\n        <i className=\"fas fa-arrow-left\"></i>\r\n      </div>\r\n      {/* </Link> */}\r\n\r\n      {editMode ? (\r\n        <input\r\n          className=\"edit-input\"\r\n          value={newPost.newTitle}\r\n          onChange={handleEdit}\r\n          placeholder={post.title}\r\n          name=\"editTitle\"\r\n        />\r\n      ) : (\r\n        <h4>{post.title}</h4>\r\n      )}\r\n\r\n      {username === post.author && (\r\n        <div className=\"edit-delete-btns\">\r\n          <div onClick={() => setEditMode(true)} className=\"icon\">\r\n            <i className=\"fas fa-pen\"></i>\r\n          </div>\r\n          <Link to=\"/\">\r\n            <div onClick={handlePostDelete} className=\"icon\">\r\n              <i className=\"fas fa-trash\"></i>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      )}\r\n\r\n      <span className=\"author\">{post.author}</span>\r\n      <span className=\"date\">{post.date}</span>\r\n\r\n      {editMode ? (\r\n        <textarea\r\n          cols=\"20\"\r\n          rows=\"5\"\r\n          className=\"edit-input\"\r\n          value={newPost.newContent}\r\n          onChange={handleEdit}\r\n          placeholder={post.content}\r\n          name=\"editContent\"\r\n        />\r\n      ) : (\r\n        <p>{post.content}</p>\r\n      )}\r\n\r\n      {editMode ? (\r\n        <>\r\n          <button onClick={pickRandomImage} disabled={!editMode}>\r\n            Pick random image\r\n          </button>\r\n          <img\r\n            width=\"400\"\r\n            src={newPost.editImgLink}\r\n            alt=\"\"\r\n            style={{ margin: \"15px 0 20px\" }}\r\n          />\r\n        </>\r\n      ) : (\r\n        <img src={post.imglink} alt=\"\" />\r\n      )}\r\n\r\n      <div className=\"modal-btns\">\r\n        <Link to=\"/\">\r\n          <button className=\"btn-post\" onClick={cancelEdit}>\r\n            Cancel\r\n          </button>\r\n        </Link>\r\n        <button className=\"btn-post\" onClick={handlePostUpdate}>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ user: { username }, posts: { items } }) => ({\r\n  username,\r\n  items,\r\n});\r\n\r\nexport default connect(mapStateToProps, { editPostAsync, deletePostAsync })(\r\n  PostPage\r\n);\r\n","import React, { useEffect, Suspense } from \"react\";\r\nimport \"./App.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"./redux/user/userActions\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Profile from \"./pages/Profile/Profile\";\r\nimport AuthPage from \"./pages/AuthPage/AuthPage\";\r\nimport socket from \"./initSocket\";\r\nimport Spinner from \"./components/Spinner/Spinner\";\r\nimport PostPage from \"./pages/PostPage/PostPage\";\r\n\r\nconst Home = React.lazy(() => import(\"./pages/Home/Home\"));\r\nfunction App({ username, isLoggedIn, validUntil, logoutUser }) {\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      const date = new Date();\r\n      const currTime = date.getTime() / 1000;\r\n      if (validUntil <= currTime) {\r\n        logoutUser();\r\n        socket.emit(\"user_disconnected\", username);\r\n      }\r\n    } else {\r\n      socket.emit(\"user_disconnected\", username);\r\n    }\r\n  }, [isLoggedIn, logoutUser, validUntil, username]);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        {isLoggedIn ? (\r\n          <Suspense fallback={<Spinner />}>\r\n            <Home />\r\n          </Suspense>\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        {isLoggedIn ? <Redirect to=\"/\" /> : <AuthPage />}\r\n      </Route>\r\n      <Route path={`/profile`}>\r\n        {isLoggedIn ? <Profile /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/:id\">\r\n        {isLoggedIn ? <PostPage /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"*\" component={() => <h2>404 Page Not Found</h2>} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ user: { isLoggedIn, validUntil, username } }) => ({\r\n  isLoggedIn,\r\n  validUntil,\r\n  username,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(App);\r\n","import UserActionTypes from \"./userTypes\";\r\nimport Axios from \"axios\";\r\n\r\n// LOG IN\r\nexport const loginUserStart = () => ({ type: UserActionTypes.LOGIN_START });\r\nexport const loginUserSuccess = (user) => ({\r\n  type: UserActionTypes.LOGIN_SUCCESS,\r\n  payload: user,\r\n});\r\nexport const loginUserFailure = (errMessage) => ({\r\n  type: UserActionTypes.LOGIN_FAILURE,\r\n  payload: errMessage,\r\n});\r\nexport const loginUserAsync = (user) => (dispatch) => {\r\n  dispatch(loginUserStart());\r\n  Axios.post(\"auth/login\", {\r\n    username: user.username,\r\n    password: user.password,\r\n  })\r\n    .then((response) => dispatch(loginUserSuccess(response.data)))\r\n    .catch((err) => dispatch(loginUserFailure(err.message)));\r\n};\r\n\r\n// UPDATE PROFILE\r\nexport const updateUserStart = () => ({\r\n  type: UserActionTypes.UPDATE_PROFILE_START,\r\n});\r\nexport const updateUserSuccess = (user) => ({\r\n  type: UserActionTypes.UPDATE_PROFILE_SUCCESS,\r\n  payload: user,\r\n});\r\nexport const updateUserFailure = (errMessage) => ({\r\n  type: UserActionTypes.UPDATE_PROFILE_FAILURE,\r\n  payload: errMessage,\r\n});\r\nexport const updateUserAsync = (user) => (dispatch) => {\r\n  dispatch(updateUserStart());\r\n  Axios.post(`profile/${user.key}`, { [user.key]: user.value })\r\n    .then((response) => dispatch(updateUserSuccess(response.data)))\r\n    .catch((err) => dispatch(updateUserFailure(err.message)));\r\n};\r\n\r\n// LOGOUT\r\nexport const logoutUser = () => ({ type: UserActionTypes.LOGOUT });\r\n","import io from \"socket.io-client\";\r\n\r\nconst socket = io.connect('/', { 'sync disconnect on unload': false })\r\n\r\nexport default socket","import PostActionTypes from \"./postsTypes\";\r\nimport Axios from \"axios\";\r\n\r\n// CREATE POST\r\nexport const createPostStart = () => ({ type: PostActionTypes.NEW_POST_START });\r\nexport const createPostSuccess = (post) => ({\r\n  type: PostActionTypes.NEW_POST_SUCCESS,\r\n  payload: post,\r\n});\r\nexport const createPostFailure = (errMessage) => ({\r\n  type: PostActionTypes.NEW_POST_FAILURE,\r\n  payload: errMessage,\r\n});\r\nexport const createPostAsync = (post) => (dispatch) => {\r\n  dispatch(createPostStart());\r\n  Axios.post(\"/post\", post)\r\n    .then((response) => {\r\n      dispatch(createPostSuccess(response.data.post));\r\n    })\r\n    .catch((err) => dispatch(createPostFailure(err.message)));\r\n};\r\n\r\n// FETCH ALL POSTS\r\nexport const fetchPostsStart = () => ({\r\n  type: PostActionTypes.FETCH_POSTS_START,\r\n});\r\nexport const fetchPostsSuccess = (posts) => ({\r\n  type: PostActionTypes.FETCH_POSTS_SUCCESS,\r\n  payload: posts,\r\n});\r\nexport const fetchPostsFailure = (errMessage) => ({\r\n  type: PostActionTypes.FETCH_POSTS_FAILURE,\r\n  payload: errMessage,\r\n});\r\nexport const fetchPostsAsync = () => (dispatch) => {\r\n  dispatch(fetchPostsStart());\r\n  Axios.get(\"/post\")\r\n    .then((response) =>\r\n      dispatch(fetchPostsSuccess(response.data.posts.reverse()))\r\n    )\r\n    .catch((err) => dispatch(fetchPostsFailure(err.message)));\r\n};\r\n\r\n// EDIT POST\r\nexport const editPostStart = () => ({ type: PostActionTypes.EDIT_POST_START });\r\nexport const editPostSuccess = (post) => ({\r\n  type: PostActionTypes.EDIT_POST_SUCCESS,\r\n  payload: post,\r\n});\r\nexport const editPostFailure = (errMessage) => ({\r\n  type: PostActionTypes.EDIT_POST_FAILURE,\r\n  payload: errMessage,\r\n});\r\nexport const editPostAsync = (post) => (dispatch) => {\r\n  dispatch(editPostStart());\r\n  Axios.post(`/post/${post._id}`, post)\r\n    .then((response) => dispatch(editPostSuccess(response.data.post)))\r\n    .catch((err) => dispatch(editPostFailure(err.message)));\r\n};\r\n\r\n// DELETE POST\r\nexport const deletePostStart = () => ({\r\n  type: PostActionTypes.DELETE_POST_START,\r\n});\r\nexport const deletePostSuccess = (postid) => ({\r\n  type: PostActionTypes.DELETE_POST_SUCCESS,\r\n  payload: postid,\r\n});\r\nexport const deletePostFailure = (errMessage) => ({\r\n  type: PostActionTypes.DELETE_POST_FAILURE,\r\n  payload: errMessage,\r\n});\r\nexport const deletePostAsync = (postid) => (dispatch) => {\r\n  dispatch(deletePostStart());\r\n  Axios.delete(`/post/${postid}`)\r\n    .then(() => dispatch(deletePostSuccess(postid)))\r\n    .catch((err) => dispatch(deletePostFailure(err.message)));\r\n};\r\n"],"sourceRoot":""}